<?php
/**
 * Prjct: Vhealings
 * User: musta
 * Date: 4/28/2017
 * Time: 10:38 PM
 */

namespace Wrsft\Test\TestCase\Controller\Component;


use Cake\TestSuite\IntegrationTestCase;
use Cake\Controller\Controller;
use Cake\Controller\ComponentRegistry;
use Cake\Event\Event;
use Cake\Network\Request;
use Cake\Network\Response;
use Cake\Network\Session;
use Cake\Utility\Text;
use Wrsft\Controller\Component\WrsftAuthComponent;

class WrsftAuthComponentTest extends IntegrationTestCase
{
    public $component;
    public $controller;

    public function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $request = new Request();
        $response = new Response();

        $this->controller = $this->getMockBuilder('Cake\Controller\Controller')
            ->setConstructorArgs([$request, $response])
            ->setMethods(null)
            ->getMock();

        $registry = new ComponentRegistry($this->controller);
        $this->component = new WrsftAuthComponent($registry);
    }

    public function testAnonymousNotInAnyRole(){
        $result = $this->component->inRoles(self::getRoles());
        $this->assertFalse($result, 'Anonymous User should not have any role defined');
    }

    public function testUSerHasRole(){

        $this->constructRequestSession();

        $result = $this->component->inRoles([self::getRoles()[1]]);
        $this->assertTrue($result, 'User should have \'Citoyen\' role defined');
    }

    public function testUserDoesNotHaveRole(){

        $this->constructRequestSession();

        $result = $this->component->inRoles([self::getRoles()[2]]);
        pr($result);
        $this->assertFalse($result, 'User should not have \'bandit\' role defined');
    }

    public function testLoginUserSucceed(){

    }

    public function testLoginUserFails(){

    }

    private static function getRoles(){

        return ['policier', 'citoyen', 'bandit', 'observer'];
    }

    protected function constructRequestSession()
    {
        $tempSession = new Session();
        $tempSession->write('Auth', [
            'User' => [
                'id' => Text::uuid(),
                'username' => 'testname',
                'roles' => [
                    self::getRoles()[1],
                    self::getRoles()[0]
                ]
            ]]);


        $this->component->request->session($tempSession);
    }

}