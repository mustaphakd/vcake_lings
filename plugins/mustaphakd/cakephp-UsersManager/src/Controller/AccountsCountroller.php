<?php
/**
 * Prjct: Vhealings
 * User: musta
 * Date: 4/27/2017
 * Time: 9:54 AM
 */

namespace Wrsft\Controller;

use Cake\Auth\DefaultPasswordHasher;
use Cake\Http\ServerRequest ;
use Cake\Routing\Route\Route;
use Cake\Routing\Router;
use Cake\Utility\Text;

class AccountsCountroller extends WrsftBaseController
{

    public function register(){

    }

    public function login(){

    }

    public function confirmAccount(){

        $confirmatioHash = $this->request->getQuery('confirmatioHash');

    }

    public function forgotPassword(){

        if($this->request->is('post')){
            $email = trim($this->request->getData('email'));

            if(!isset($email) || empty($email))
            {
                $this->Flash->message('please provide a valid email');
                return;
            }

            $foundUser = $this->Users->findByEmail($email);

            if(!isset($foundUser) || $foundUser == null){
                $this->Flash->message('please provide a valid email');
                return;
            }

            $confirmationHash = (new DefaultPasswordHasher())->hash(Text::uuid());

            $this->Users->set('confirmation_hash', $confirmationHash);

            $emailler = $this->loadComponent('Email', ['className' => 'cakephp-Utilities.Email']);

            $url = Router::url([
                'controller' => 'cakephp-UsersManager.Accounts',
                'action' => 'resetPassword',
                'confirmationHash' => $confirmationHash
            ]);
            $confirmationMessageRedirect = $this->request->getData('confirmationredirect');
            $emailler->sendPasswordResetRequest($email, $url);

            $this->Flash->message("password reset request send to $email");
            $this->request->redirect($confirmationMessageRedirect);
        }
    }

    public function resetPassword($confirmationHash){

        $confirmatioHash = $this->request->getQuery('confirmatioHash');
    }

    public function isAuthorized($user)
    {
        $action = $this->request->getParam('action') ;

        if( in_array($action, ['register', 'login', 'confirmAccount', 'forgotPassword', 'resetPassword'])){
            return true;
        }


        return parent::isAuthorized($user); // TODO: Change the autogenerated stub
    }


}